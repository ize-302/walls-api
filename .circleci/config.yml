# # This config was automatically generated from your source code
# # Stacks detected: deps:node:.,test:jest:
# version: 2.1
# orbs:
#   node: circleci/node@5
# jobs:
#   test-node:
#     # Install node dependencies and run tests
#     executor: node/default
#     environment:
#       JEST_JUNIT_OUTPUT_DIR: ./test-results/
#     steps:
#       - checkout
#       - node/install-packages:
#           pkg-manager: npm
#       - run:
#           command: npm install jest-junit
#       - run:
#           name: Run tests
#           command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
#       - store_test_results:
#           path: ./test-results/
#   deploy:
#     # This is an example deploy job, not actually used by the workflow
#     docker:
#       - image: cimg/base:stable
#     steps:
#       # Replace this with steps to deploy to users
#       - run:
#           name: deploy
#           command: '#e.g. ./deploy.sh'
# workflows:
#   build-and-test:
#     jobs:
#       - test-node
#     # - deploy:
#     #     requires:
#     #       - test-node

# .circleci/config.yml
version: 2.1

workflows:
  test-env-vars:
    jobs:
      - build:
          context: admin

jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: "Load up .env.testing file"
          command: |
            cat > .env.testing <<EOF
            # Environment Variables for Testing
            NODE_ENV=$NODE_ENV
            PORT=$PORT
            BASE_PATH=$BASE_PATH
            SESSION_SECRET=$SESSION_SECRET
            TURSO_DATABASE_URL=$TURSO_DATABASE_URL
            TURSO_DATABASE_AUTH_TOKEN=$TURSO_DATABASE_AUTH_TOKEN
            EOF

      - run:
          name: "echo an env var that is part of our context"
          command:
            echo $NODE_ENV
            echo $PORT
            echo $BASE_PATH
            echo $SESSION_SECRET
            echo $TURSO_DATABASE_URL
            echo $TURSO_DATABASE_AUTH_TOKEN

      - run: npm install cross-env
      - run: npm install
      - run: npm test